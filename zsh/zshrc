# ==================================
# Function
# ==================================
function isLinux()
{ # {{{
	if [[ `uname -s` == 'Linux' ]]
	then
		return 0	# means true in the following script
	else
		return 1	# False
	fi
} # }}}
function isExist()
{ # {{{
	# It require one argument.
	WHICH_CMD='/usr/bin/which'
	$WHICH_CMD $1 > /dev/null
} # }}}
function sufAlias()
{ # {{{
	# It require two argument.
	# $1 for the suffix.
	# $2 for the target program.
	if ( isExist $2 )
	then
		alias -s $1=$2
	fi
} # }}}
# ==================================
# Alias
# ==================================
alias h='history 25'
alias j='jobs -l'
alias la='ls -a'
alias lf='ls -Fa'
alias ll='ls -lah'
alias ls='ls -FGI'
alias .='ls'
alias ..='cd ../'
alias rm='rm -vf'
alias cp='cp -R'
alias s='screen'
alias r='screen -r'
alias man='env LC_ALL=C man'
alias grep='grep --color'
alias egrep='egrep --color'
alias du='du -h'
alias df='df -h'
alias top='top -s 1'
alias mysql='mysql -u root -p --prompt="(\u@\h) [\d]>"'
alias ssh-x='ssh -c arcfour,blowfish-cbc -XC'
alias ssh-passwd='ssh -o PubkeyAuthentication=no'
alias wget='wget --no-check-certificate'
alias py='python'
alias sudo='sudo ' # https://wiki.archlinux.org/index.php/Sudo#Passing_aliases
alias httpserver='python -m SimpleHTTPServer'

#if [[ -x `where gvim` ]]
#then
#	export EDITOR=gvim
#	alias vi='gvim'
if ( isExist vim )
then
	export EDITOR=vim
	alias vi='vim -p'
	alias vim='vim -p'
else
	export EDITOR=vi
fi

if ( isExist cmdwatch )
then
	alias cmdwatch='cmdwatch -n 1'
fi

if ( isExist nload )
then
	alias nload='nload -i 102400 -o 102400'
fi
# ==================================
# Alias > Suffix Alias
# ==================================
suf_editor=(c cpp h html css)
for i in $suf_editor
do
	alias -s $i=$EDITOR
done

sufAlias py python
# ==================================
# Alias > Hook for Linux
# ==================================
if isLinux
then
	alias ls='ls --color -F'
	alias watch='watch -n 0.5'
	if ( isExist htop )
		alias top='htop -d 5'
	then
	else
		alias top='top -d 0.5'
	fi
fi
# ==================================
# Bindkey
# ==================================
bindkey -v
bindkey '^A'	beginning-of-line
bindkey '^E'	end-of-line
bindkey '^[[A'	up-line-or-search
bindkey '^[OA'	up-line-or-search               # For gnome terminal
bindkey '^[[B'	down-line-or-search
bindkey '^[OB'	down-line-or-search             # For gnome terminal
bindkey -M viins '^R'	history-incremental-pattern-search-backward
bindkey -M viins '^F'	history-incremental-pattern-search-forward
bindkey -M vicmd '/'	history-incremental-pattern-search-backward
bindkey -M vicmd '?'	history-incremental-pattern-search-forward
bindkey '^[[1;3C'	forward-word
bindkey '^[k'	forward-word
bindkey '^[[1;3D'	backward-word
bindkey '^[j'	backward-word
bindkey '\e.'	insert-last-word
bindkey -M menuselect '^[[Z'	reverse-menu-complete
# For solving some problematic bindkey
# http://unix.stackexchange.com/questions/140770/how-can-i-get-back-into-normal-edit-mode-after-pressing-esc-in-zsh-vi-mode
zle -A kill-whole-line vi-kill-line
# zle -A backward-kill-word vi-backward-kill-word
zle -A backward-delete-char vi-backward-delete-char
# ==================================
# Misc ( generated by zsh-newuser-install )
# ==================================
# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
# ==================================
# Completion setting
# ==================================
fpath=($ZSH/completions/src $fpath)

autoload -Uz compinit
compinit -u

zstyle ':completion:*' menu select=2
zstyle ':completion:*:default' list-colors $ZLS_COLORS
compdef mosh=ssh

# pip zsh completion start
# generate by $ pip completion --zsh
function _pip_completion {
  local words cword
  read -Ac words
  read -cn cword
  reply=( $( COMP_WORDS="$words[*]" \
             COMP_CWORD=$(( cword-1 )) \
             PIP_AUTO_COMPLETE=1 $words[1] ) )
}
compctl -K _pip_completion pip
# pip zsh completion end

# ==================================
# Custom setting
# ==================================
if [[ -f $HOME/.zshlocal ]]
then
	source $HOME/.zshlocal
fi
